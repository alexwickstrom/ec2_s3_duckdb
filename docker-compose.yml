version: '3'
services:

  pyscript:
    build: ./app/
    volumes:
      - ./app:/app
      - parquet-data:/parquet-data
    env_file:
      - ./.env
    depends_on:
      minio:
        condition: service_started
      postgres:
        condition: service_healthy
      
  dbt:
    build: ./dbt/
    volumes:
      - ./dbt:/dbt
    working_dir: /dbt
    environment:
      - DBT_PROFILES_DIR=/dbt/
      - POSTGRES_HOST=postgres
    env_file:
      - ./.env
    depends_on:
      - postgres
        
      
  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
      - shared-data:/shared-data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
     
    command: server /data
    ports:
      - "9000:9000"
      
  postgres:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    env_file:
      - ./.env  
    ports:
      - "5433:5432"

  duckdb:
    build: 
      context: .
      dockerfile: ./duck/Dockerfile
    volumes:
      - ./app/:/app/
    command: tail -f /dev/null  # Keeps the container running
    
    environment:
      - DUCKDB_AUTO_CONF=false  # Optional: Disable auto-configuration
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    depends_on:
      - minio

volumes:
  minio-data:
  shared-data:
  parquet-data:
